version: '2'

services:

    # reverse proxy to backend doing SSL offloading
    proxy:
        build:
            context: ./
            dockerfile: ./proxy/Dockerfile
        image: open-iot-proxy:latest
        ports:
            - 80:80
            - 443:443
            - 1883:1883
            - 8883:8883
            - 15675:15675
            - 15676:15676
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - ./certs/server_key.pem:/etc/nginx/certs/example.com.key
            - ./certs/server_certificate.pem:/etc/nginx/certs/example.com.crt

    # broker service
    broker:
        build:
            context: ./
            dockerfile: ./broker/Dockerfile
        image: open-iot-broker:latest
        hostname: broker
        environment:
            RABBITMQ_ERLANG_COOKIE: erlang-cookie                  # change this

    # ui and api service
    ui:
        build:
            context: ./
            dockerfile: ./Dockerfile
        image: open-iot-ui:latest
        hostname: ui
        environment:
            VIRTUAL_HOST: example.com                              # how is the host reached
            LETSENCRYPT_HOST: example.com                          # host for issuing LE Certificate
            LETSENCRYPT_EMAIL: admin@example.com                   # valid email owning the host

            DB_CONNECTION: mongodb://db.example.com/prod           # db connection string

            ENCRYPTION_SECRET: my-super-secret-key                 # change this (JWT)
            HANDLER_KEY: broker-super-secret key                   # change this (broker client)
            HANDLER_SECRET: broker-super-secret-pass               # change this (broker client)

            BROKER_HOST: broker
